# Generated by Django 5.0.1 on 2025-08-07 19:22

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "feed_type",
                    models.CharField(
                        choices=[
                            ("product_catalog", "Product Catalog"),
                            ("inventory", "Inventory"),
                            ("pricing", "Pricing"),
                            ("assets", "Digital Assets"),
                            ("fitment", "Vehicle Fitment"),
                            ("custom", "Custom"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("csv", "CSV"),
                            ("xml", "XML"),
                            ("json", "JSON"),
                            ("xlsx", "Excel"),
                            ("txt", "Text (Tab-delimited)"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "product_tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "included_fields",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        default=list,
                        size=None,
                    ),
                ),
                ("custom_field_mapping", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                ("schedule_time", models.TimeField(blank=True, null=True)),
                ("schedule_day", models.IntegerField(blank=True, null=True)),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("download", "Direct Download"),
                            ("email", "Email"),
                            ("ftp", "FTP"),
                            ("sftp", "SFTP"),
                            ("api", "API Webhook"),
                        ],
                        default="download",
                        max_length=20,
                    ),
                ),
                ("delivery_config", models.JSONField(blank=True, default=dict)),
                ("include_images", models.BooleanField(default=False)),
                ("compress_output", models.BooleanField(default=False)),
                ("encrypt_output", models.BooleanField(default=False)),
                ("last_generated", models.DateTimeField(blank=True, null=True)),
                ("last_delivered", models.DateTimeField(blank=True, null=True)),
                ("generation_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("brands", models.ManyToManyField(blank=True, to="products.brand")),
                (
                    "categories",
                    models.ManyToManyField(blank=True, to="products.category"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_feeds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "data_feeds",
                "ordering": ["customer", "name"],
            },
        ),
        migrations.CreateModel(
            name="FeedGeneration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("generation_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("generating", "Generating"),
                            ("generated", "Generated"),
                            ("delivering", "Delivering"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("row_count", models.IntegerField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("delivery_status", models.CharField(blank=True, max_length=50)),
                ("delivery_details", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("error_details", models.JSONField(blank=True, default=dict)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generations",
                        to="feeds.datafeed",
                    ),
                ),
            ],
            options={
                "db_table": "feed_generations",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="FeedSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subscription_type",
                    models.CharField(
                        choices=[
                            ("new_products", "New Products"),
                            ("price_changes", "Price Changes"),
                            ("inventory_updates", "Inventory Updates"),
                            ("product_updates", "Product Updates"),
                            ("new_assets", "New Assets"),
                            ("discontinued", "Discontinued Products"),
                        ],
                        max_length=30,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "notification_method",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("webhook", "Webhook"),
                            ("in_app", "In-App Notification"),
                        ],
                        default="email",
                        max_length=20,
                    ),
                ),
                ("notification_config", models.JSONField(blank=True, default=dict)),
                ("min_interval_hours", models.IntegerField(default=24)),
                ("last_notified", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("brands", models.ManyToManyField(blank=True, to="products.brand")),
                (
                    "categories",
                    models.ManyToManyField(blank=True, to="products.category"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feed_subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "specific_products",
                    models.ManyToManyField(blank=True, to="products.product"),
                ),
            ],
            options={
                "db_table": "feed_subscriptions",
            },
        ),
        migrations.CreateModel(
            name="ChangeNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notification_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("subject", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("change_summary", models.JSONField(default=dict)),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("delivery_details", models.JSONField(blank=True, default=dict)),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="feeds.feedsubscription",
                    ),
                ),
            ],
            options={
                "db_table": "change_notifications",
                "ordering": ["-sent_at"],
            },
        ),
        migrations.AddIndex(
            model_name="datafeed",
            index=models.Index(
                fields=["customer", "is_active"], name="data_feeds_custome_e4d363_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="datafeed",
            index=models.Index(
                fields=["frequency", "is_active"], name="data_feeds_frequen_ea3dac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedgeneration",
            index=models.Index(
                fields=["feed", "started_at"], name="feed_genera_feed_id_a79c6c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedgeneration",
            index=models.Index(
                fields=["generation_id"], name="feed_genera_generat_982b20_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedgeneration",
            index=models.Index(fields=["status"], name="feed_genera_status_180968_idx"),
        ),
        migrations.AddIndex(
            model_name="feedsubscription",
            index=models.Index(
                fields=["customer", "is_active"], name="feed_subscr_custome_0ce186_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedsubscription",
            index=models.Index(
                fields=["subscription_type", "is_active"],
                name="feed_subscr_subscri_e5cd92_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="feedsubscription",
            unique_together={("customer", "subscription_type")},
        ),
        migrations.AddIndex(
            model_name="changenotification",
            index=models.Index(
                fields=["subscription", "sent_at"],
                name="change_noti_subscri_80ae41_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="changenotification",
            index=models.Index(
                fields=["notification_id"], name="change_noti_notific_db669e_idx"
            ),
        ),
    ]
