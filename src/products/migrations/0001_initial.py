# Generated by Django 5.0.1 on 2025-08-07 19:22

import audit.mixins
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="InterchangeType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "product_interchange_types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VehicleMake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("country", models.CharField(blank=True, max_length=50)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "vehicle_makes",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="brands/")),
                ("website", models.URLField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "brands",
                "ordering": ["name"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.PositiveIntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                ("sort_order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("meta_title", models.CharField(blank=True, max_length=150)),
                ("meta_description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.category",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
                "db_table": "product_categories",
                "ordering": ["sort_order", "name"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("native_name", models.CharField(blank=True, max_length=100)),
                (
                    "code_2",
                    models.CharField(
                        help_text="ISO 3166-1 alpha-2", max_length=2, unique=True
                    ),
                ),
                (
                    "code_3",
                    models.CharField(
                        help_text="ISO 3166-1 alpha-3", max_length=3, unique=True
                    ),
                ),
                (
                    "code_numeric",
                    models.CharField(
                        help_text="ISO 3166-1 numeric", max_length=3, unique=True
                    ),
                ),
                ("calling_code", models.CharField(blank=True, max_length=5)),
                ("currency_code", models.CharField(blank=True, max_length=3)),
                ("currency_name", models.CharField(blank=True, max_length=50)),
                ("currency_symbol", models.CharField(blank=True, max_length=5)),
                ("region", models.CharField(blank=True, max_length=50)),
                ("subregion", models.CharField(blank=True, max_length=50)),
                ("capital", models.CharField(blank=True, max_length=100)),
                (
                    "tld",
                    models.CharField(
                        blank=True, help_text="Top level domain", max_length=10
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_shipping_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Countries",
                "db_table": "countries",
                "ordering": ["name"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FeatureCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Feature Categories",
                "db_table": "product_feature_categories",
                "ordering": ["sort_order", "name"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="FontAwesome icon class", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True, help_text="Hex color code", max_length=7
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.featurecategory",
                    ),
                ),
            ],
            options={
                "db_table": "features",
                "ordering": ["category__sort_order", "sort_order", "name"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sku", models.CharField(db_index=True, max_length=50, unique=True)),
                ("number", models.CharField(db_index=True, max_length=50, unique=True)),
                ("title", models.CharField(max_length=100)),
                ("upc", models.CharField(blank=True, max_length=14)),
                ("short_description", models.CharField(blank=True, max_length=20)),
                ("long_description", models.TextField(blank=True)),
                (
                    "abbreviated_description",
                    models.CharField(blank=True, max_length=12),
                ),
                ("invoice_description", models.CharField(blank=True, max_length=20)),
                ("slang_description", models.CharField(blank=True, max_length=20)),
                ("marketing_description", models.TextField(blank=True)),
                ("keywords", models.CharField(blank=True, max_length=500)),
                ("tariff_code", models.CharField(blank=True, max_length=12)),
                ("unspsc_code", models.CharField(blank=True, max_length=12)),
                (
                    "length",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "width",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "dimensional_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "shipping_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("quantity_required", models.PositiveIntegerField(default=1)),
                ("quantity_in_package", models.PositiveIntegerField(default=1)),
                ("hardware", models.CharField(blank=True, max_length=10)),
                ("warranty_months", models.PositiveIntegerField(blank=True, null=True)),
                ("warranty_description", models.TextField(blank=True)),
                ("warranty_terms", models.TextField(blank=True)),
                ("warranty_return_policy", models.TextField(blank=True)),
                ("warranty_link", models.URLField(blank=True)),
                (
                    "jobber",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "export",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "msrp",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "map_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("additional_shipping", models.BooleanField(default=False)),
                ("sold_as", models.CharField(blank=True, max_length=10)),
                ("universal", models.BooleanField(default=False)),
                ("hazardous", models.BooleanField(default=False)),
                ("proposition_65", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("launch_date", models.DateField(blank=True, null=True)),
                ("discontinue_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="products.brand",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="products", to="products.category"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "products",
                "ordering": ["-created_at"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CustomerPricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("valid_from", models.DateField(blank=True, null=True)),
                ("valid_until", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricing_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_pricing",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_prices",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "db_table": "customer_pricing",
            },
        ),
        migrations.CreateModel(
            name="ProductDescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("MKT", "Marketing"),
                            ("LJO", "Long Jeep Only"),
                            ("LNJ", "Long Non Jeep"),
                            ("LAM", "Long All Models"),
                            ("EXT", "Extended"),
                            ("ENJ", "Extended Non Jeep"),
                            ("EXU", "Extended Unlimited"),
                        ],
                        max_length=3,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="descriptions",
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product Descriptions",
                "db_table": "product_descriptions",
                "ordering": ["type"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ProductFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_primary", models.BooleanField(default=False)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("notes", models.TextField(blank=True)),
                ("value", models.CharField(blank=True, max_length=100)),
                ("unit", models.CharField(blank=True, max_length=20)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.feature",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feature_list",
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "product_features",
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name="product",
            name="features",
            field=models.ManyToManyField(
                related_name="products", to="products.productfeature"
            ),
        ),
        migrations.CreateModel(
            name="ProductIncludes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "component",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="included_items",
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product Includes",
                "db_table": "product_includes",
                "ordering": ["product__number"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name="product",
            name="includes",
            field=models.ManyToManyField(
                related_name="products", to="products.productincludes"
            ),
        ),
        migrations.CreateModel(
            name="ProductInterchange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("number", models.CharField(db_index=True, max_length=50)),
                ("manufacturer", models.CharField(blank=True, max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "interchange_type",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.interchangetype",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interchange_list",
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "product_interchanges",
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name="product",
            name="part_numbers",
            field=models.ManyToManyField(
                related_name="products", to="products.productinterchange"
            ),
        ),
        migrations.CreateModel(
            name="ProductOEMNumber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("number", models.CharField(db_index=True, max_length=50)),
                ("manufacturer", models.CharField(max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("is_superseded", models.BooleanField(default=False)),
                ("superseded_by", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="oem_number_list",
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "product_oem_numbers",
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name="product",
            name="oem_numbers",
            field=models.ManyToManyField(
                related_name="products", to="products.productoemnumber"
            ),
        ),
        migrations.CreateModel(
            name="ProductOrigin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("assembled_in", models.CharField(blank=True, max_length=100)),
                (
                    "country_of_origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="origin_countries",
                        to="products.country",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product Origins",
                "db_table": "product_origins",
                "ordering": ["country_of_origin"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ProductSEO",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("meta_title", models.CharField(blank=True, max_length=150)),
                ("meta_description", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seo_info",
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Product SEOs",
                "db_table": "product_seo",
                "ordering": ["meta_title"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name="product",
            name="seo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="products.productseo",
            ),
        ),
        migrations.CreateModel(
            name="SpecificationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Specification Categories",
                "db_table": "product_specification_categories",
                "ordering": ["sort_order", "name"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="SpecificationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("number", "Number"),
                            ("decimal", "Decimal"),
                            ("boolean", "Yes/No"),
                            ("choice", "Multiple Choice"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("choice_options", models.JSONField(blank=True, default=list)),
                (
                    "unit",
                    models.CharField(
                        blank=True, help_text="e.g., inches, lbs", max_length=20
                    ),
                ),
                ("is_required", models.BooleanField(default=False)),
                ("is_filterable", models.BooleanField(default=True)),
                ("is_searchable", models.BooleanField(default=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.specificationcategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "product_specification_types",
                "ordering": ["category__sort_order", "sort_order", "name"],
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ProductSpecification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text_value", models.TextField(blank=True)),
                ("number_value", models.BigIntegerField(blank=True, null=True)),
                (
                    "decimal_value",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                ("boolean_value", models.BooleanField(blank=True, null=True)),
                ("choice_value", models.CharField(blank=True, max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("notes", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="specifications",
                        to="products.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "spec_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.specificationtype",
                    ),
                ),
            ],
            options={
                "db_table": "product_specifications",
            },
            bases=(audit.mixins.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name="VehicleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "make",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="models",
                        to="products.vehiclemake",
                    ),
                ),
            ],
            options={
                "db_table": "vehicle_models",
                "ordering": ["make", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductFitment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year_start", models.IntegerField()),
                ("year_end", models.IntegerField()),
                ("submodel", models.CharField(blank=True, max_length=100)),
                ("engine", models.CharField(blank=True, max_length=100)),
                ("position", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("attributes", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fitments",
                        to="products.product",
                    ),
                ),
                (
                    "make",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.vehiclemake",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.vehiclemodel",
                    ),
                ),
            ],
            options={
                "db_table": "product_fitments",
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["id"], name="product_cat_id_5c678d_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["slug"], name="product_cat_slug_801f9e_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["parent"], name="product_cat_parent__fb81c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="country",
            index=models.Index(fields=["code_2"], name="countries_code_2_eaf6cd_idx"),
        ),
        migrations.AddIndex(
            model_name="country",
            index=models.Index(fields=["code_3"], name="countries_code_3_4b543e_idx"),
        ),
        migrations.AddIndex(
            model_name="country",
            index=models.Index(
                fields=["is_active", "is_shipping_available"],
                name="countries_is_acti_28fd34_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customerpricing",
            index=models.Index(
                fields=["customer", "product"], name="customer_pr_custome_bb7fa0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerpricing",
            index=models.Index(
                fields=["valid_from", "valid_until"],
                name="customer_pr_valid_f_76b5cc_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customerpricing",
            unique_together={("customer", "product")},
        ),
        migrations.AddIndex(
            model_name="productdescription",
            index=models.Index(fields=["type"], name="product_des_type_5f86ef_idx"),
        ),
        migrations.AddIndex(
            model_name="productfeature",
            index=models.Index(
                fields=["product", "is_primary"], name="product_fea_product_2f689e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productfeature",
            index=models.Index(
                fields=["feature", "product"], name="product_fea_feature_ac8b13_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productfeature",
            unique_together={("product", "feature")},
        ),
        migrations.AddIndex(
            model_name="productinterchange",
            index=models.Index(fields=["number"], name="product_int_number_78a95b_idx"),
        ),
        migrations.AddIndex(
            model_name="productinterchange",
            index=models.Index(
                fields=["product", "is_primary"], name="product_int_product_86ac8b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productinterchange",
            index=models.Index(
                fields=["interchange_type", "number"],
                name="product_int_interch_cb34d5_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productinterchange",
            unique_together={("product", "number", "interchange_type")},
        ),
        migrations.AddIndex(
            model_name="productoemnumber",
            index=models.Index(fields=["number"], name="product_oem_number_3be217_idx"),
        ),
        migrations.AddIndex(
            model_name="productoemnumber",
            index=models.Index(
                fields=["manufacturer", "number"], name="product_oem_manufac_22c9f3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productoemnumber",
            index=models.Index(
                fields=["product", "is_primary"], name="product_oem_product_a2327e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productoemnumber",
            unique_together={("product", "number", "manufacturer")},
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_sku_fe2039_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["brand"], name="products_brand_i_0d1950_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active", "is_featured"], name="products_is_acti_d79db5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productspecification",
            index=models.Index(
                fields=["product", "spec_type"], name="product_spe_product_74d170_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productspecification",
            index=models.Index(
                fields=["spec_type", "text_value"],
                name="product_spe_spec_ty_9272e2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productspecification",
            index=models.Index(
                fields=["spec_type", "number_value"],
                name="product_spe_spec_ty_aec2c6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productspecification",
            index=models.Index(
                fields=["spec_type", "decimal_value"],
                name="product_spe_spec_ty_c9a0c0_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productspecification",
            unique_together={("product", "spec_type")},
        ),
        migrations.AddIndex(
            model_name="vehiclemodel",
            index=models.Index(
                fields=["make", "name"], name="vehicle_mod_make_id_a078cf_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="vehiclemodel",
            unique_together={("make", "code")},
        ),
        migrations.AddIndex(
            model_name="productfitment",
            index=models.Index(
                fields=["product", "make", "model"],
                name="product_fit_product_5f71c1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productfitment",
            index=models.Index(
                fields=["year_start", "year_end"], name="product_fit_year_st_b39861_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productfitment",
            index=models.Index(
                fields=["make", "model", "year_start", "year_end"],
                name="product_fit_make_id_be4bb7_idx",
            ),
        ),
    ]
