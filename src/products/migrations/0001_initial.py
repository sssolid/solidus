# Generated by Django 5.0.1 on 2025-08-04 16:02

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="brands/")),
                ("website", models.URLField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "brands",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VehicleMake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("country", models.CharField(blank=True, max_length=50)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "vehicle_makes",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                ("sort_order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("meta_title", models.CharField(blank=True, max_length=150)),
                ("meta_description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
                "db_table": "categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sku", models.CharField(db_index=True, max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("short_description", models.TextField(blank=True)),
                ("long_description", models.TextField(blank=True)),
                (
                    "features",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "part_numbers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "oem_numbers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("specifications", models.JSONField(blank=True, default=dict)),
                (
                    "length",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "width",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "msrp",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "map_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("launch_date", models.DateField(blank=True, null=True)),
                ("discontinue_date", models.DateField(blank=True, null=True)),
                ("meta_title", models.CharField(blank=True, max_length=150)),
                ("meta_description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="products.brand",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="products", to="products.category"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "db_table": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CustomerPricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("valid_from", models.DateField(blank=True, null=True)),
                ("valid_until", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricing_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_pricing",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_prices",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "db_table": "customer_pricing",
            },
        ),
        migrations.CreateModel(
            name="VehicleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "make",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="models",
                        to="products.vehiclemake",
                    ),
                ),
            ],
            options={
                "db_table": "vehicle_models",
                "ordering": ["make", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductFitment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year_start", models.IntegerField()),
                ("year_end", models.IntegerField()),
                ("submodel", models.CharField(blank=True, max_length=100)),
                ("engine", models.CharField(blank=True, max_length=100)),
                ("position", models.CharField(blank=True, max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("attributes", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fitments",
                        to="products.product",
                    ),
                ),
                (
                    "make",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.vehiclemake",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.vehiclemodel",
                    ),
                ),
            ],
            options={
                "db_table": "product_fitments",
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["slug"], name="categories_slug_b4303a_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["parent"], name="categories_parent__7983b2_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_sku_fe2039_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["brand"], name="products_brand_i_0d1950_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active", "is_featured"], name="products_is_acti_d79db5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["part_numbers"], name="products_part_nu_701ff3_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["oem_numbers"], name="products_oem_num_aff0fd_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="customerpricing",
            index=models.Index(
                fields=["customer", "product"], name="customer_pr_custome_bb7fa0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerpricing",
            index=models.Index(
                fields=["valid_from", "valid_until"],
                name="customer_pr_valid_f_76b5cc_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customerpricing",
            unique_together={("customer", "product")},
        ),
        migrations.AddIndex(
            model_name="vehiclemodel",
            index=models.Index(
                fields=["make", "name"], name="vehicle_mod_make_id_a078cf_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="vehiclemodel",
            unique_together={("make", "code")},
        ),
        migrations.AddIndex(
            model_name="productfitment",
            index=models.Index(
                fields=["product", "make", "model"],
                name="product_fit_product_5f71c1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productfitment",
            index=models.Index(
                fields=["year_start", "year_end"], name="product_fit_year_st_b39861_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productfitment",
            index=models.Index(
                fields=["make", "model", "year_start", "year_end"],
                name="product_fit_make_id_be4bb7_idx",
            ),
        ),
    ]
